#!/usr/bin/perl -w
# Report cryptocurrency prices.  2-clause BSD license.

# Copyright 2020 /u/molo1134. All rights reserved.

use strict;
use utf8;
use feature 'unicode_strings';
binmode(STDOUT, ":utf8");

use File::Basename;
use Cwd 'realpath';
use lib dirname(realpath(__FILE__));
use Colors;
use Util;

our $coinmarketcapkey = undef;
my $coinmarketcapfile = $ENV{'HOME'} . "/.coinmarketcapkey";
if (-e ($coinmarketcapfile)) {
  require($coinmarketcapfile);
}

print "error: unable to get api key from $coinmarketcapfile\n" if not defined $coinmarketcapkey;
exit 1 if not defined $coinmarketcapkey;

my $fiat = undef;

# eggdrop doesn't split args on spaces
@ARGV=split(' ', join(' ',@ARGV));

my $crypto = undef;

my $i = 0;
while ($i <= $#ARGV) {
  # list comes from here: https://coinmarketcap.com/api/
  if (uc($ARGV[$i]) =~ /^(AUD|BRL|CAD|CHF|CLP|CNY|CZK|DKK|EUR|GBP|HKD|HUF|IDR|ILS|INR|JPY|KRW|MXN|MYR|NOK|NZD|PHP|PKR|PLN|RUB|SEK|SGD|THB|TRY|TWD|USD|ZAR)$/) {
    $fiat = $1;
  } else {
    $crypto = uc($ARGV[$i]);
  }
  $i++;
}

$crypto = "BTC" unless defined($crypto);
$fiat = "USD" unless defined($fiat);

# example: https://api.coinmarketcap.com/v1/ticker/bitcoin/?convert=USD
#my $url = "https://api.coinmarketcap.com/v1/ticker/$id/?convert=$fiat";
#my $url = "https://app-oa25k.lamp.app/phpproxy/coinmarketcap-proxy.php?id=$id&fiat=$fiat";
my $url = "https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?CMC_PRO_API_KEY=$coinmarketcapkey&symbol=$crypto&convert=$fiat";
my %results;

#print "$url\n";
open(HTTP, '-|', "curl --max-time 5 -s -k -L -H 'Accept: application/json' '$url' | jq . ");
binmode(HTTP, ":utf8");
while (<HTTP>) {
  #print;
  if (/"(\w+)":\s*"?(.*?)"?,?\s*$/) {
    my ($key, $value) = ($1, $2);
    $results{$key} = $value;
    #print "$key :: $value\n";
    if ($key eq "error_message" and $value ne "null") {
      print "error: $value\n";
      exit 0;
    }
  }
}
close(HTTP);

my $target = lc($fiat);

my $volume = commify(int($results{"volume_24h"}));
my $mktcap = commify(int($results{"market_cap"})) if $results{"market_cap"} ne "null";
$mktcap = "" if not defined $mktcap;
my $qty = int ($results{"volume_24h"} / $results{"price"}) || 0;
$results{"price"} = commify($results{"price"}) if defined($results{"price"});

my $trendsymbol;
my $trend = $results{percent_change_24h};
$trendsymbol = green("↑") if $trend ne "null" and $trend > 0.0;
$trendsymbol = red("↓") if $trend ne "null" and $trend < 0.0;
$trendsymbol = "·" if !defined $trendsymbol;
if ($trend ne "null") {
  if ($trend < 0) {
    $trend = red($trend);
  } elsif ($trend > 0) {
    $trend = green("+$trend");
  }
}

print bold("$crypto$fiat"). " $trendsymbol" . $results{"price"} . " $trend% qty $qty $crypto/24h ($volume $fiat/24h) MktCap $mktcap $fiat\n";

exit 0;

